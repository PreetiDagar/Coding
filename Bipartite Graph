class Solution {
public:
	bool isBipartite(int V, vector<int>adj[]){
	    vector<int> color(V, -1);
	    
	    for (int i = 0; i < V; ++i) {
	        if (color[i] == -1) {
    	        color[i] = 0;
    	        if (!dfs(V, adj, color, i)) {
    	            return false;
    	        }
	        }
	    }
	    
	    return true;
	}
	
    bool dfs(int V, vector<int> adj[], vector<int> &color, int node) {
        for (auto i : adj[node]) {
            if (color[i] != -1 && color[i] == color[node]) {
                return false;
            } else if (color[i] == -1) {
                color[i] = color[node] == 0 ? 1 : 0;
                if (!dfs(V, adj, color, i)) {
                    return false;
                }
            }
        }
        
        return true;
    }
};
