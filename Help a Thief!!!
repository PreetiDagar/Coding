class Solution {
  public:
    int maxCoins(int A[], int B[], int T, int N) {
        vector<pair<int, int>> plates(N);
        for (int i = 0; i < N; ++i) {
            plates[i] = make_pair(A[i], B[i]);
        }
        
        sort(plates.begin(), plates.end(), [](const pair<int, int> &a, const pair<int, int> &b) -> bool {
            return a.second > b.second;
        });
        
        int index = 0, coins = 0;
        while (T > 0 && index < N) {
            if (plates[index].first <= T) {
                coins += plates[index].first * plates[index].second;
                T -= plates[index].first;
            } else {
                coins += T * plates[index].second;
                T = 0;
            }
            ++index;
        }
        
        return coins;
    }
};
